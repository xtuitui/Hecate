defaultTasks "clean"

apply plugin : "java"
apply plugin : "war"
apply plugin : "jetty"
apply plugin : "eclipse"
apply plugin : "eclipse-wtp"
apply plugin : "jacoco"
//apply plugin : "checkstyle"
apply plugin : "pmd"
//apply plugin : "findbugs"
apply plugin : "distribution"
apply plugin : "project-report"
apply plugin : "build-dashboard"

group = "org.xiaotuitui"
version = "0.0.1-SNAPSHOT"
description = "This Is Hecate Project"
sourceCompatibility = "${hecate_jdkLevel}"
targetCompatibility = "${hecate_jdkLevel}"

ext{
	spring = ["version" : "4.2.5.RELEASE"]
	spring_data_jpa = ["version" : "1.10.1.RELEASE"]
	hibernate = ["version" : "4.3.11.Final"]
}

repositories {
	mavenLocal()
    /*maven{
    	name "Nexus Maven Repository"
    	url "http://127.0.0.1:8081/nexus/public/"
    }*/
    mavenCentral()
}

dependencies {

	//JMockit
	testCompile "org.jmockit:jmockit:1.19"
	//testCompile "org.jmockit:jmockit-coverage:1.19"

	//Junit
	testCompile "junit:junit:4.11"
	testCompile "org.hamcrest:hamcrest-library:1.3"
	
	//Mockito
	testCompile "org.mockito:mockito-all:1.10.19"
	
	//dbunit
	testCompile "org.dbunit:dbunit:2.5.1"
	
	//Cucumber
	testCompile "info.cukes:cucumber-java:1.2.4"
	testCompile "info.cukes:cucumber-junit:1.2.4"
	testCompile "info.cukes:cucumber-spring:1.2.4"
	
	//Selenium
	testCompile ("org.seleniumhq.selenium:selenium-java:2.46.0"){
		exclude group : "xerces", module : "xercesImpl"
	}
    
    //Spring
    compile "org.springframework:spring-context:${spring.version}"
    compile "org.springframework:spring-context-support:${spring.version}"
    compile "org.springframework:spring-tx:${spring.version}"
    compile "org.springframework:spring-aspects:${spring.version}"
    compile "org.springframework:spring-web:${spring.version}"
    compile "org.springframework:spring-webmvc:${spring.version}"
    //compile "org.springframework:spring-webmvc-portlet:${spring.version}"
    //compile "org.springframework:spring-websocket:${spring.version}"
    compile "org.springframework:spring-jdbc:${spring.version}"
    compile "org.springframework:spring-orm:${spring.version}"
    compile "org.springframework:spring-oxm:${spring.version}"
    compile "org.springframework.data:spring-data-jpa:${spring_data_jpa.version}"
    //compile "org.springframework:spring-instrument:${spring.version}"
    //compile "org.springframework:spring-instrument-tomcat:${spring.version}"
    //compile "org.springframework:spring-jms:${spring.version}"
    testCompile "org.springframework:spring-test:${spring.version}"
    
    //aspectj
    //compile "org.aspectj:aspectjweaver:1.8.6"
    
    //Hibernate For JPA
    compile "org.hibernate:hibernate-entitymanager:${hibernate.version}"
    
    //Common Validation
    compile "javax.validation:validation-api:1.1.0.Final"
    
    //connection pool
    compile "commons-dbcp:commons-dbcp:1.4"
    
    //log4j
    compile "log4j:log4j:1.2.17"
    compile "org.slf4j:slf4j-log4j12:1.7.13"
    
    //json(alibaba)
    compile "com.alibaba:fastjson:1.2.8"
    
    //json(net.sf)
    //compile "net.sf.json-lib:json-lib:2.4:jdk15"
    
    //jackson(codehaus)
    //compile "org.codehaus.jackson:jackson-core-asl:1.9.13"
    //compile "org.codehaus.jackson:jackson-mapper-asl:1.9.13"
    
    //jackson(fasterxml)
    compile "com.fasterxml.jackson.core:jackson-core:2.6.7"
    compile "com.fasterxml.jackson.core:jackson-databind:2.6.7"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.6.7"
    
    //StringUtils
    compile "commons-lang:commons-lang:2.6"
    
    //BeanUtils
    compile "commons-beanutils:commons-beanutils:1.9.2"
    
    //IO
    compile "commons-io:commons-io:2.4"
    
    //File Upload
    compile "commons-fileupload:commons-fileupload:1.3.1"
    
    //Email
    compile "javax.mail:javax.mail-api:1.5.5"
    //compile "javax.mail:mail:1.4.7"
    
    //Quartz-Scheduler
    compile "org.quartz-scheduler:quartz:2.2.2"
    
    //Servlet
    providedCompile "javax.servlet:javax.servlet-api:3.0.1"
    providedCompile "javax.servlet.jsp:jsp-api:2.2"
	runtime "javax.servlet:jstl:1.1.2"
	runtime "taglibs:standard:1.1.2"
	
	//Driver
	//Mysql
	compile "mysql:mysql-connector-java:5.1.8"
}

tasks.withType(JavaCompile){
	options.encoding = "utf-8"
}

processResources{
	exclude("jetty/jetty-env.xml")
}

task processExpandResources(type : Copy){
	from "src/main/resources/jetty"
	into "${buildDir}/resources/main/jetty"
	include("jetty-env.xml")
	expand(project.properties);
}

jettyRun{
	httpPort = 8080
	contextPath = "hecate"
	jettyEnvXml = file("${buildDir}/resources/main/jetty/jetty-env.xml")
	webDefaultXml = file("src/main/resources/jetty/webdefault.xml")
}

jettyStop{
	stopPort = 9999
	stopKey = "stopKey"
}

processTestResources{
	exclude("jdbc.properties")
}

task processExpandTestResources(type : Copy){
	from "src/test/resources/jdbc.properties"
	into "${buildDir}/resources/test"
	expand(project.properties);
}

test{
	reports.html.destination = file("$reports.html.destination/unit")
	reports.junitXml.destination = file("$reports.junitXml.destination/unit")
}

sourceSets{
	integrationTest{
		java.srcDir file("src/integration/java")
		resources.srcDir file("src/integration/resources")
		compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.testCompile
		runtimeClasspath = output + compileClasspath + configurations.testRuntime
	}
}

processIntegrationTestResources{
	exclude("jdbc.properties")
}

task processExpandIntegrationTestResources(type : Copy){
	from "src/integration/resources/jdbc.properties"
	into "${buildDir}/resources/integrationTest"
	expand(project.properties);
}

task integrationTest(type : Test){
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
	reports.html.destination = file("$reports.html.destination/integration")
	reports.junitXml.destination = file("$reports.junitXml.destination/integration")
}

[test, integrationTest].each{ currentTask ->
	currentTask.testLogging{
		showStandardStreams = true
		exceptionFormat = "full"
		events "started", "passed", "skipped", "failed"
	}
}

jacoco{
    toolVersion = "0.7.1.201405082137"
}

jacocoTestReport {
    reports{
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco/unit"
    }
}

task jacocoIntegrationTestReport(type : JacocoReport){
	sourceDirectories = files(sourceSets.main.java.srcDirs[0])
	executionData = files("${buildDir}/jacoco/integrationTest.exec")
	classDirectories = sourceSets.main.output
	reports{
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco/integration"
    }
}

[/*checkstyle, */pmd, /*findbugs*/].each{ currentTask ->
	currentTask.ignoreFailures = true
}
/*findbugs{
	toolVersion = "2.0.3"
	effort = "min"
}

tasks.withType(FindBugs){
	reports{
		xml.enabled = false
		html.enabled = true
	}
}*/

war{
	archiveName = "Hecate.war"
	rootSpec.exclude("jetty")
	rootSpec.exclude("mysql-connector-java-5.1.8.jar")
}

javadoc{
	//options.locale = "en"
	options.locale = "zh_CN"
}

task sourcesJar(type : Jar){
    classifier = "sources"
    from sourceSets.main.allSource
}

task javadocJar(type : Jar){
    classifier = "javadoc"
    from javadoc.destinationDir
}

artifacts{
    archives sourcesJar
    archives javadocJar
}

distributions{
	main{
		baseName = rootProject.name
		contents{
			from{
				libsDir
			}
		}
	}
}

projectReport{
	projectReportDirName = "projectReport"
}

processExpandResources.dependsOn processResources
classes.dependsOn processExpandResources

sourcesJar.dependsOn war
javadocJar.dependsOn sourcesJar, javadoc
distZip.dependsOn javadocJar
distTar.dependsOn distZip
assemble.dependsOn distTar

processExpandTestResources.dependsOn processTestResources
testClasses.dependsOn processExpandTestResources

processExpandIntegrationTestResources.dependsOn processIntegrationTestResources
integrationTestClasses.dependsOn processExpandIntegrationTestResources

compileIntegrationTestJava.dependsOn test
check.dependsOn integrationTest

jacocoTestReport.dependsOn integrationTest
jacocoIntegrationTestReport.dependsOn jacocoTestReport
check.dependsOn jacocoIntegrationTestReport

buildDashboard.dependsOn projectReport
check.dependsOn buildDashboard